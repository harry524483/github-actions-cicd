name: CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use node 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      - name: Install and check code format
        run: |
          yarn install
          yarn format:check

      - name: Run unit test
        run: yarn test -- --coverage
        env:
          CI: true

      - name: Upload test coverage
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage

      - name: Build
        if: github.event_name == 'push'
        run: yarn build

      - name: Upload build artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: build

      - name: ZIP assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage

      - name: Create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }}

      - name: Deploy to staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain short-rice.surge.sh

      - name: Deploy to production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain makeshift-operation.surge.sh

      - name: Upload coverage reports
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Open issue
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.CUSTOM_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.", "assignees":["${{ github.event.pull_request.user.login }}"]
            }'
